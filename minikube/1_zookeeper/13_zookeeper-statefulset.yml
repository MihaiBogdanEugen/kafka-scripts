---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: zk
  labels:
    category: zookeeper
spec: 
  serviceName: zk-svc
  replicas: 3
  template:
    metadata:
      labels:
        app: zk
    spec: 
      containers:
      - name: zookeeper
        imagePullPolicy: Always
        image: mbe1224/zookeeper
        ports:
        - containerPort: 2181
          name: client
        - containerPort: 2888
          name: server
        - containerPort: 3888
          name: leader-election
        env:
        - name: IS_KUBERNETES
          value: "true"        
        - name: ZOOKEEPER_4LW_COMMANDS_WHITELIST
          valueFrom:
            configMapKeyRef:
                name: zk-cm
                key: 4lw.commands.whitelist                                      
        - name: ZOOKEEPER_LOG4J_ROOT_LOGLEVEL
          valueFrom:
            configMapKeyRef:
                name: zk-cm
                key: log4j.root.loglevel                
        - name: ZOOKEEPER_CLIENT_PORT
          value: "2181"
        - name: ZOOKEEPER_SERVER_PORT
          value: "2888"
        - name: ZOOKEEPER_ELECTION_PORT
          value: "3888"
        - name: ZOOKEEPER_SERVERS
          value: "zk-0.zk-svc.default.svc.cluster.local:2888:3888;zk-1.zk-svc.default.svc.cluster.local:2888:3888;zk-2.zk-svc.default.svc.cluster.local:2888:3888"
        - name: ZOOKEEPER_SERVER_ID
          value: "ignored"
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - '[ "imok" = "$(echo ruok | nc -w 1 -q 1 localhost 2181)" ]'            
          initialDelaySeconds: 10
          timeoutSeconds: 5
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - '[ "imok" = "$(echo ruok | nc -w 1 -q 1 localhost 2181)" ]' 
          initialDelaySeconds: 10
          timeoutSeconds: 5
        volumeMounts:
        - name: datadir
          mountPath: /var/lib/zookeeper
      volumes:
      - name: datadir
        emptyDir: {}